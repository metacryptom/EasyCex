/**
 * This module was automatically generated by `ts-interface-builder`
 */
import * as t from "ts-interface-checker";
// tslint:disable:object-literal-key-quotes

export const IQueryDepthResult = t.iface([], {
  "code": "string",
  "data": t.array(t.iface([], {
    "asks": t.array(t.tuple("string", "string", "string", "string")),
    "bids": t.array(t.tuple("string", "string", "string", "string")),
  })),
});

export const IQueryInstrumentsResult = t.iface([], {
  "code": "string",
  "data": t.array(t.iface([], {
    "instType": "string",
    "instId": "string",
    "baseCcy": "string",
    "quoteCcy": "string",
    "tickSz": "string",
    "lotSz": "string",
    "minSz": "string",
  })),
});

export const IQueryTickersResult = t.iface([], {
  "code": "string",
  "data": t.array(t.iface([], {
    "instType": "string",
    "instId": "string",
    "last": "string",
    "lastSz": "string",
    "askPx": "string",
    "askSz": "string",
    "bidPx": "string",
    "open24h": "string",
    "high24h": "string",
    "low24h": "string",
    "volCcy24h": "string",
    "vol24h": "string",
    "ts": "string",
  })),
});

export const IGetAcccountBalanceResult = t.iface([], {
  "code": "string",
  "data": t.array(t.iface([], {
    "details": t.array(t.iface([], {
      "availBal": "string",
      "availEq": "string",
      "cashBal": "string",
      "ccy": "string",
      "crossLiab": "string",
      "disEq": "string",
      "eq": "string",
      "eqUsd": "string",
      "frozenBal": "string",
      "interest": "string",
      "uTime": "string",
    })),
    "mgnRatio": "string",
    "totalEq": "string",
  })),
});

export const IGetAssetBalanceResult = t.iface([], {
  "code": "string",
  "data": t.array(t.iface([], {
    "availBal": "string",
    "bal": "string",
    "ccy": "string",
    "frozenBal": "string",
  })),
});

export const IGetAssetCurrenciesResult = t.iface([], {
  "code": "string",
  "data": t.array(t.iface([], {
    "ccy": "string",
    "name": "string",
    "chain": "string",
    "canDep": "boolean",
    "canWd": "boolean",
    "canInternal": "boolean",
    "minWd": "string",
    "maxFee": "string",
    "minFee": "string",
    "mainNet": "boolean",
  })),
});

const exportedTypeSuite: t.ITypeSuite = {
  IQueryDepthResult,
  IQueryInstrumentsResult,
  IQueryTickersResult,
  IGetAcccountBalanceResult,
  IGetAssetBalanceResult,
  IGetAssetCurrenciesResult,
};
export default exportedTypeSuite;
